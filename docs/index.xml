<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HPC R</title>
    <link>/hpc-r/</link>
    <description>Recent content on HPC R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Apr 2016 15:21:22 +0200</lastBuildDate>
    
	<atom:link href="/hpc-r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>High-performance R</title>
      <link>/hpc-r/</link>
      <pubDate>Sat, 23 Apr 2016 15:21:22 +0200</pubDate>
      
      <guid>/hpc-r/</guid>
      <description>R is not a fast language. But we can make it work extremely effectively if we know how. This tutorial covers a number of techniques we can use to parallelize and speed up our code, in addition to a couple other useful tricks we can use in our research. A lot of the material is borrowed from Hadley Wickham&amp;rsquo;s &amp;ldquo;Advanced R&amp;rdquo; book.
In particular, this workshop combines a review of basic R syntax (making sure everyone is up to speed) with more advanced R concepts.</description>
    </item>
    
    <item>
      <title>Basic Syntax</title>
      <link>/hpc-r/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/basics/</guid>
      <description>The absolute basics We’re going to start with the absolute fundamentals and work up from there. Unlike most regular courses, we’ll try to go in-depth into performance-related stuff as we go (keep the more advanced people interested that way…).
The most basic use of R is as a simple calculator:
5 + 4 ## [1] 9 1 - 3 ## [1] -2 4 * -2 ## [1] -8 5 / 6 ## [1] 0.</description>
    </item>
    
    <item>
      <title>Dataframes</title>
      <link>/hpc-r/dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/dataframes/</guid>
      <description>placeholder</description>
    </item>
    
    <item>
      <title>Vectors and indexing</title>
      <link>/hpc-r/vectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/vectors/</guid>
      <description>R has a special data structure called a vector. A vector is a 1D set of the same type of object. Most often, a vector will simply be a sequence of numbers. We can create a sequence of numbers using the : operator.
numbers &amp;lt;- 1:10 numbers ## [1] 1 2 3 4 5 6 7 8 9 10 Note that vectors are treated the same way as a single element.</description>
    </item>
    
  </channel>
</rss>