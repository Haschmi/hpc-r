<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HPC R</title>
    <link>/hpc-r/</link>
    <description>Recent content on HPC R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/hpc-r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>High-performance R</title>
      <link>/hpc-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/</guid>
      <description>Although R is probably not the fastest language ever made, it&amp;rsquo;s one of the most effective data analysis tools out there. This tutorial focus on a number of techniques we can use to parallelize and speed up our code, in addition to a couple other useful techniques we can use in our research.
In particular, these materials combine a review of basic R syntax and concepts with more advanced performance-related content.</description>
    </item>
    
    <item>
      <title>Basic Syntax</title>
      <link>/hpc-r/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/basics/</guid>
      <description>The most basic use of R is as a simple calculator:
5 + 4 ## [1] 9 1 - 3 ## [1] -2 4 * -2 ## [1] -8 5 / 6 ## [1] 0.8333333 A function in R follows the syntax function_name(argument1, argument2). Functions perform operations on their arguments and return a result. The most basic function is the print() statement.
print(&amp;#39;hello world!&amp;#39;) ## [1] &amp;quot;hello world!&amp;quot; R also gives us access to more complex mathematical funtions.</description>
    </item>
    
    <item>
      <title>Vectors and indexing</title>
      <link>/hpc-r/vectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/vectors/</guid>
      <description>R has a special data structure called a vector. A vector is a 1D set of the same type of object. Most often, a vector will simply be a sequence of numbers. We can create a sequence of numbers using the : operator.
numbers &amp;lt;- 1:10 numbers ## [1] 1 2 3 4 5 6 7 8 9 10 Note that vectors are treated the same way as a single element.</description>
    </item>
    
    <item>
      <title>Dataframes</title>
      <link>/hpc-r/dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hpc-r/dataframes/</guid>
      <description>placeholder</description>
    </item>
    
  </channel>
</rss>